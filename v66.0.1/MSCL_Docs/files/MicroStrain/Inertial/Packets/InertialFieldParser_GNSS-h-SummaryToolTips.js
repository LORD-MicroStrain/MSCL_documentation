NDSummary.OnToolTipsLoaded("File:MicroStrain/Inertial/Packets/InertialFieldParser_GNSS.h",{2899:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2899\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">MipGnssFieldParser</div></div></div></div>",2900:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2900\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_LLHPosition</div></div></div><div class=\"TTSummary\">The field parser for LLH Position data</div></div>",2909:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2909\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses an MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",2910:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2910\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",2912:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",2913:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",2914:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2914\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ECEFPosition</div></div></div><div class=\"TTSummary\">The field parser for ECEF Position data</div></div>",2919:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2919\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_NEDVelocity</div></div></div><div class=\"TTSummary\">The field parser for NED Velocity data</div></div>",2928:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2928\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ECEFVelocity</div></div></div><div class=\"TTSummary\">The field parser for ECEF Velocity data</div></div>",2933:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2933\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_DOP</div></div></div><div class=\"TTSummary\">The field parser for DOP data</div></div>",2943:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2943\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_UTCTime</div></div></div><div class=\"TTSummary\">The field parser for UTC Time data</div></div>",2948:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2948\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSTime</div></div></div><div class=\"TTSummary\">The field parser for GPS Time data</div></div>",2953:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2953\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ClockInfo</div></div></div><div class=\"TTSummary\">The field parser for Clock Info data</div></div>",2959:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2959\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSFixInfo</div></div></div><div class=\"TTSummary\">The field parser for GPS Fix Information data</div></div>",2965:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2965\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_SpaceVehicleInfo</div></div></div><div class=\"TTSummary\">The field parser for Space Vehicle Information data</div></div>",2973:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2973\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_HardwareStatus</div></div></div><div class=\"TTSummary\">The field parser for Hardware Status Information data</div></div>",2979:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2979\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_DGNSSInfo</div></div></div><div class=\"TTSummary\">The field parser for DGNSS Information data</div></div>",2986:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2986\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_DGNSSChannelStatus</div></div></div><div class=\"TTSummary\">The field parser for DGNSS Channel Status data</div></div>",2993:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2993\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ClockInfo2</div></div></div><div class=\"TTSummary\">The field parser for Clock Info 2 data</div></div>",3000:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3000\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSLeapSeconds</div></div></div><div class=\"TTSummary\">The field parser for GPS Leap Seconds Data</div></div>",3004:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3004\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssSBASInfo</div></div></div><div class=\"TTSummary\">The field parser for SBAS Status data</div></div>",3014:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3014\" class=\"NDPrototype NoParameterForm\">FieldParser_GnssSBASInfo()</div><div class=\"TTSummary\">Default constructor disabled</div></div>",3015:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3015\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses a MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",3016:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3016\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",3018:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",3019:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",3020:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3020\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssSBASCorrection</div></div></div><div class=\"TTSummary\">The field parser for GNSS calculated SBAS Correction</div></div>",3027:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3027\" class=\"NDPrototype NoParameterForm\">FieldParser_GnssSBASCorrection()</div><div class=\"TTSummary\">Default constructor disabled</div></div>",3028:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3028\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses a MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",3029:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3029\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",3031:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",3032:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",3033:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3033\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssRFErrorDetection</div></div></div><div class=\"TTSummary\">The field parser for GNSS Error Detection subsystem status</div></div>",3040:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3040\" class=\"NDPrototype NoParameterForm\">FieldParser_GnssRFErrorDetection()</div><div class=\"TTSummary\">Default constructor disabled</div></div>",3041:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3041\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses a MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",3042:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype3042\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",3044:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",3045:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",3046:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3046\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssSatelliteStatus</div></div></div><div class=\"TTSummary\">The field parser for GNSS Satellite Status data</div></div>",3053:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3053\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssRawObservation</div></div></div><div class=\"TTSummary\">The field parser for GNSS Raw Observation data</div></div>",3068:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3068\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssStationInfo</div></div></div><div class=\"TTSummary\">The field parser for GNSS Base Station Info data</div></div>",3077:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3077\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_RTKCorrectionsStatus</div></div></div><div class=\"TTSummary\">The field parser for RTK Corrections Status Data</div></div>",3088:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3088\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSIonosphericCorrection</div></div></div><div class=\"TTSummary\">The field parser for Ionospheric Correction Data</div></div>",3095:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3095\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_IonosphericCorrection</div></div></div><div class=\"TTSummary\">The field parser for Ionospheric Correction Data</div></div>"});