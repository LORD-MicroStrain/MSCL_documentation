NDSummary.OnToolTipsLoaded("File:MicroStrain/Inertial/Packets/InertialFieldParser_GNSS.h",{2656:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2656\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">MipGnssFieldParser</div></div></div></div>",2657:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2657\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_LLHPosition</div></div></div><div class=\"TTSummary\">The field parser for LLH Position data</div></div>",2666:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2666\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses an MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",2667:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2667\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",2669:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",2670:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",2671:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2671\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ECEFPosition</div></div></div><div class=\"TTSummary\">The field parser for ECEF Position data</div></div>",2676:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2676\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_NEDVelocity</div></div></div><div class=\"TTSummary\">The field parser for NED Velocity data</div></div>",2685:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2685\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ECEFVelocity</div></div></div><div class=\"TTSummary\">The field parser for ECEF Velocity data</div></div>",2690:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2690\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_DOP</div></div></div><div class=\"TTSummary\">The field parser for DOP data</div></div>",2700:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2700\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_UTCTime</div></div></div><div class=\"TTSummary\">The field parser for UTC Time data</div></div>",2705:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2705\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSTime</div></div></div><div class=\"TTSummary\">The field parser for GPS Time data</div></div>",2710:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2710\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ClockInfo</div></div></div><div class=\"TTSummary\">The field parser for Clock Info data</div></div>",2716:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2716\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSFixInfo</div></div></div><div class=\"TTSummary\">The field parser for GPS Fix Information data</div></div>",2722:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2722\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_SpaceVehicleInfo</div></div></div><div class=\"TTSummary\">The field parser for Space Vehicle Information data</div></div>",2730:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2730\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_HardwareStatus</div></div></div><div class=\"TTSummary\">The field parser for Hardware Status Information data</div></div>",2736:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2736\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_DGNSSInfo</div></div></div><div class=\"TTSummary\">The field parser for DGNSS Information data</div></div>",2743:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2743\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_DGNSSChannelStatus</div></div></div><div class=\"TTSummary\">The field parser for DGNSS Channel Status data</div></div>",2750:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2750\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_ClockInfo2</div></div></div><div class=\"TTSummary\">The field parser for Clock Info 2 data</div></div>",2757:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2757\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSLeapSeconds</div></div></div><div class=\"TTSummary\">The field parser for GPS Leap Seconds Data</div></div>",2761:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2761\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssSBASInfo</div></div></div><div class=\"TTSummary\">The field parser for SBAS Status data</div></div>",2771:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2771\" class=\"NDPrototype NoParameterForm\">FieldParser_GnssSBASInfo()</div><div class=\"TTSummary\">Default constructor disabled</div></div>",2772:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2772\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses a MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",2773:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2773\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",2775:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",2776:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",2777:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2777\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssSBASCorrection</div></div></div><div class=\"TTSummary\">The field parser for GNSS calculated SBAS Correction</div></div>",2784:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2784\" class=\"NDPrototype NoParameterForm\">FieldParser_GnssSBASCorrection()</div><div class=\"TTSummary\">Default constructor disabled</div></div>",2785:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2785\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses a MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",2786:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2786\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",2788:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",2789:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",2790:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2790\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssRFErrorDetection</div></div></div><div class=\"TTSummary\">The field parser for GNSS Error Detection subsystem status</div></div>",2797:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2797\" class=\"NDPrototype NoParameterForm\">FieldParser_GnssRFErrorDetection()</div><div class=\"TTSummary\">Default constructor disabled</div></div>",2798:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2798\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> parse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipDataField&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">MipDataPoints&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const override</span></td></tr></table></div><div class=\"TTSummary\">Parses a MipDataField for MipDataPoints and stores them in the valid or invalid result vectors</div></div>",2799:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2799\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static bool</span> registerParser()</div><div class=\"TTSummary\">The static function that registers this parser with the list of parsers (called immediately)</div></div>",2801:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The 2-byte field type (Descriptor ID + Field ID) for this parser</div></div>",2802:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">Whether this parser is registered. This will always be true. This is used to call registerParser() immediately</div></div>",2803:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2803\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssSatelliteStatus</div></div></div><div class=\"TTSummary\">The field parser for GNSS Satellite Status data</div></div>",2810:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2810\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssRawObservation</div></div></div><div class=\"TTSummary\">The field parser for GNSS Raw Observation data</div></div>",2825:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2825\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GnssStationInfo</div></div></div><div class=\"TTSummary\">The field parser for GNSS Base Station Info data</div></div>",2834:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2834\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_RTKCorrectionsStatus</div></div></div><div class=\"TTSummary\">The field parser for RTK Corrections Status Data</div></div>",2845:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2845\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_GPSIonosphericCorrection</div></div></div><div class=\"TTSummary\">The field parser for Ionospheric Correction Data</div></div>",2852:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2852\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">FieldParser_IonosphericCorrection</div></div></div><div class=\"TTSummary\">The field parser for Ionospheric Correction Data</div></div>"});