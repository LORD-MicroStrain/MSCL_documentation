NDSummary.OnToolTipsLoaded("File:Types.h",{10299:"<div class=\"NDToolTip TSection LC\"><div class=\"TTSummary\">Contains various typedefs that are used throughout MSCL.</div></div>",10301:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 1-byte signed integer.</div></div>",10302:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 2-byte signed integer.</div></div>",10303:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 4-byte signed integer.</div></div>",10304:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for an 8-byte signed integer.</div></div>",10305:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 1-byte unsigned integer.</div></div>",10306:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 2-byte unsigned integer.</div></div>",10307:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a 4-byte unsigned integer.</div></div>",10308:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for an 8-byte unsigned integer.</div></div>",10309:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a Node\'s node address.</div></div>",10310:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for a lock_gaurd (automatically locks and unlocks) to a mutex.</div></div>",10311:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for a lock_gaurd (automatically locks and unlocks) to a recursive mutex.</div></div>",10312:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for an id that uniquely identifies a wireless packet.</div></div>",10313:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Typedef for a simple_any type</div></div>",10315:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype10315\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">template</span> &lt;<span class=\"SHKeyword\">class</span> Tout, <span class=\"SHKeyword\">class</span> Tin&gt; Tout checked_cast(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">Tin&nbsp;</td><td></td><td class=\"PName\">value,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName\">valueName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\">Tout&nbsp;</td><td></td><td class=\"PName\">min&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">std::numeric_limits&lt;Tout&gt;::min(),</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Tout&nbsp;</td><td></td><td class=\"PName\">max&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">std::numeric_limits&lt;Tout&gt;::max()</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Safely casts one type to another type using static_cast by checking the limit of the cast first</div></div>",10317:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">typedef for a vector of bytes.</div></div>",10318:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of Bytes objects.</div></div>",10338:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The possible states a device can be in.</div></div>"});