NDSummary.OnToolTipsLoaded("File:MicroStrain/Wireless/Configuration/NodeEepromHelper.h",{6616:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype6616\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">NodeEepromHelper</div></div></div><div class=\"TTSummary\">A helper class for reading and writing to a Wireless Node\'s Eeprom.&nbsp; This class provides eeprom specific parsing so that high-level objects can be converted to their low-level eeprom value equivelent and vice-versa.</div></div>",6627:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6627\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">NodeEepromHelper(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">WirelessNode_Impl&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">node</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a NodeEepromHelper object with a WirelessNode_Impl.</div></div>",6629:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6629\" class=\"NDPrototype NoParameterForm\">WirelessNode_Impl* m_node</div><div class=\"TTSummary\">The WirelessNode_Impl used by this eeprom helper.</div></div>",6631:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6631\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Value read(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">location</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads an EepromLocation from the Node and returns a Value with the result.</div></div>",6632:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6632\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">location,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Value&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes a Value to a given EepromLocation on the Node.</div></div>",6633:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6633\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> EepromLocation findDerivedChannelEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td class=\"PName last\">category</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the EepromLocation for the given WirelessTypes::DerivedCategory.</div></div>",6634:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6634\" class=\"NDPrototype NoParameterForm\">NodeAddress nodeAddress() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the node address for this Node.</div></div>",6635:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6635\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> applyEepromChanges()</div><div class=\"TTSummary\">Resets the radio/power on the Node to apply eeprom changes that have been made.</div></div>",6636:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6636\" class=\"NDPrototype NoParameterForm\">WirelessTypes::Frequency read_frequency() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the frequency from the Node.</div></div>",6637:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6637\" class=\"NDPrototype NoParameterForm\">WirelessTypes::RegionCode read_regionCode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the region code from the Node.</div></div>",6638:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6638\" class=\"NDPrototype NoParameterForm\">Version read_fwVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the firmware version of the Node.</div></div>",6639:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6639\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Version read_asppVersion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the ASPP version of the Node for the specified &lt;WirelesTypes::RadioMode&gt;.</div></div>",6640:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6640\" class=\"NDPrototype NoParameterForm\">WirelessTypes::CommProtocol read_commProtocol() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::CommProtocol of the Node.</div></div>",6641:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6641\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_commProtocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">protocol</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::CommProtocol to the Node.</div></div>",6642:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6642\" class=\"NDPrototype NoParameterForm\">WirelessModels::NodeModel read_model() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the model of the Node.</div></div>",6643:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6643\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> read_serial() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the serial number of the Node.</div></div>",6644:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6644\" class=\"NDPrototype NoParameterForm\">WirelessTypes::MicroControllerType read_microcontroller() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the microcontroller of the Node.</div></div>",6645:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6645\" class=\"NDPrototype NoParameterForm\">RadioFeatures read_radioFeatures() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the RadioFeatures of the Node.</div></div>",6646:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6646\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint64</span> read_dataStorageSize() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the total number of bytes available for data storage on the Node.&nbsp; This is an overall count and does not take into account data that is already stored on the Node.</div></div>",6647:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6647\" class=\"NDPrototype NoParameterForm\">FlashInfo read_flashInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the FlashInfo of the Node.&nbsp; This assumes the Node supports the command to get this info.</div></div>",6648:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6648\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SettlingTime read_filter1() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the specific filter 1 eeprom location.&nbsp; Note: this should be used by the SyncSamplingNetwork only, as it bypasses the ChannelMask logic.</div></div>",6649:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6649\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SettlingTime read_filter2() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the specific filter 2 eeprom location.&nbsp; Note: this should be used by the SyncSamplingNetwork only, as it bypasses the ChannelMask logic.</div></div>",6650:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6650\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_channelMask(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the channel mask to the Node, representing which channels are active or not.</div></div>",6651:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6651\" class=\"NDPrototype NoParameterForm\">ChannelMask read_channelMask() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current channel mask from the Node, representing which channels are active or not.</div></div>",6652:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6652\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_numSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">sweeps</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the number of sweeps which affects the duration of sampling. In the case of Burst sampling, this is the number of sweeps per burst This function assumes the number of sweeps has already been normalized (multiple of 100 and within min/max).</div></div>",6653:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6653\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> read_numSweeps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current number of sweeps which affects the duration of sampling.</div></div>",6654:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6654\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_unlimitedDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">unlimitedDuration,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the unlimited duration flag. This is a different eeprom location depending on the sampling mode.</div></div>",6655:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6655\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> read_unlimitedDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the current unlimited duration flag set on the Node. This is a different eeprom location depending on the sampling mode.</div></div>",6656:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6656\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_sampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">WirelessSampleRate&nbsp;</td><td class=\"PName last\">rate,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the sample rate. This is a different eeprom location depending on the sampling mode.</div></div>",6657:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6657\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::WirelessSampleRate read_sampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the current sample rate set on the Node. This is a different eeprom location depending on the sampling mode.</div></div>",6658:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6658\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_dataFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td class=\"PName last\">dataFormat</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the data format to the Node.</div></div>",6659:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6659\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DataFormat read_dataFormat() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current data format set on the Node.</div></div>",6660:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6660\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_collectionMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">collectionMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the data collection mode to the Node.</div></div>",6661:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6661\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DataCollectionMethod read_collectionMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current data collection mode set on the Node.</div></div>",6662:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6662\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_syncSamplingMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SyncSamplingMode&nbsp;</td><td class=\"PName last\">syncMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the sync sampling mode to the Node.</div></div>",6663:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6663\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SyncSamplingMode read_syncSamplingMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current sync sampling mode set on the Node.</div></div>",6664:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6664\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_sensorDelay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">microseconds</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the sensor delay to the Node.</div></div>",6665:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6665\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> read_sensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current sensor delay set on the Node.</div></div>",6666:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6666\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_retransmission(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">NodeRetransmission&nbsp;</td><td class=\"PName last\">reTx</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the retransmission option to the Node.</div></div>",6667:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6667\" class=\"NDPrototype NoParameterForm\">WirelessTypes::NodeRetransmission read_retransmission() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current retransmission option set on the Node.</div></div>",6668:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6668\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_settlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the settling time to the Node for the given ChannelMask.</div></div>",6669:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6669\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::SettlingTime read_settlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the current filter settling time on the Node for the given ChannelMask.</div></div>",6670:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6670\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_timeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeSpan&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timespan</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the time between each burst to the Node.&nbsp; This function assumes the time between bursts value has been normalized.</div></div>",6671:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6671\" class=\"NDPrototype NoParameterForm\">TimeSpan read_timeBetweenBursts() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the time between each burst from the Node.</div></div>",6672:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6672\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_samplingMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::SamplingMode to the Node.</div></div>",6673:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6673\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SamplingMode read_samplingMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the current WirelessTypes::SamplingMode from the Node.</div></div>",6674:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6674\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_channelLinearEquation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">LinearEquation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">equation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the slope and offset for the specified ChannelMask on the Node.</div></div>",6675:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6675\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_channelLinearEquation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">LinearEquation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the slope and offset for the specified ChannelMask from the Node.</div></div>",6676:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6676\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_channelUnit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CalCoef_Unit&nbsp;</td><td></td><td class=\"PName last\">unit</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the unit for the specified ChannelMask to the Node.</div></div>",6677:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6677\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_channelEquation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CalCoef_EquationType&nbsp;</td><td></td><td class=\"PName last\">equation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the equation id for the specified ChannelMask to the Node.</div></div>",6678:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6678\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_channelUnitAndEquation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CalCoef_Unit&nbsp;</td><td></td><td class=\"PName last\">unit,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CalCoef_EquationType&nbsp;</td><td></td><td class=\"PName last\">equation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the unit and equation for the specified ChannelMask to the Node.</div></div>",6679:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6679\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_Unit read_channelUnit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the WirelessTypes::CalCoef_Unit for the specified ChannelMask from the Node.</div></div>",6680:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6680\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_EquationType read_channelEquation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the WirelessTypes::CalCoef_EquationType for the specified channel from the Node.&nbsp; This assumes the channel is supported by the Node.</div></div>",6681:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6681\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_channelFactoryLinearEq(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">LinearEquation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the factory calibration slope and offset for the specified ChannelMask from the Node.</div></div>",6682:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6682\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_EquationType read_channelFactoryEquationType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the factory calibration WirelessTypes::CalCoef_EquationType for the specified channel from the Node.&nbsp; This assumes the channel is supported by the Node.</div></div>",6683:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6683\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_Unit read_channelFactoryUnit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the factory calibration WirelessTypes::CalCoef_Unit for the specified ChannelMask from the Node.</div></div>",6684:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6684\" class=\"NDPrototype NoParameterForm\">WirelessTypes::TransmitPower read_transmitPower() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::TransmitPower that is currently set on the Node.</div></div>",6685:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6685\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_transmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransmitPower&nbsp;</td><td class=\"PName last\">power</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::TransmitPower to the Node.</div></div>",6686:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6686\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_inactivityTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the user inactivity timeout that is currently set on the Node.&nbsp; This controls how many seconds before the Node goes to sleep when idle.</div></div>",6687:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6687\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_inactivityTimeout(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the user inactivity timeout to the Node.&nbsp; This function assumes the inactivity timeout has already been set to be above the minimum.</div></div>",6688:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6688\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> read_checkRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the check radio interval that is currently set on the Node.&nbsp; This controls how often the node wakes up from sleep to check for commands.</div></div>",6689:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6689\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_checkRadioInterval(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">interval</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the check radio interval to the Node.&nbsp; This controls how often the node wakes up from sleep to check for commands.&nbsp; This function assumes the interval is within the acceptable range.</div></div>",6690:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6690\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DefaultMode read_defaultMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::DefaultMode that is currently set on the Node.</div></div>",6691:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6691\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_defaultMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DefaultMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the given WirelessTypes::DefaultMode to the Node.</div></div>",6692:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6692\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_logPage() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the next flash page that to be used for datalogging.</div></div>",6693:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6693\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_logPageOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the byte offset into the log page for the next datalogging session.</div></div>",6694:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6694\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_numDatalogSessions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the number of datalog sessions that are currently stored on the Node.</div></div>",6695:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6695\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_txPerGroup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">txPerGroup</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the transmissions per group to the Node.</div></div>",6696:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6696\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_groupSize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">groupSize</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the group size to the Node.</div></div>",6697:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6697\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_tdmaAddress(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">address</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the TDMA address to the Node.</div></div>",6698:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6698\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_maxRetransPerBurst(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">maxReTxPerBurst</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the max retransmissions per burst to the Node.</div></div>",6699:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6699\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_gaugeResistance()</div><div class=\"TTSummary\">Reads the Gauge Resistance that is currently stored on the Node.</div></div>",6700:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6700\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_gaugeResistance(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">resistance</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the Gauge Resistance to the Node.</div></div>",6701:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6701\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_numActiveGauges()</div><div class=\"TTSummary\">Reads the Number of Active Gauges that is currently stored on the Node.</div></div>",6702:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6702\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_numActiveGauges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">numGauges</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the Number of Active Gauges to the Node.</div></div>",6703:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6703\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">float</span> read_lowBatteryThreshold()</div><div class=\"TTSummary\">Reads the Low Battery Threshold (in Volts) that is currently stored on the Node.</div></div>",6704:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6704\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_lowBatteryThreshold(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">volts</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the Low Battery Threshold to the Node.</div></div>",6705:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6705\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::InputRange read_inputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the input range for the specified ChannelMask from the Node.</div></div>",6706:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6706\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_inputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::InputRange value for the specified ChannelMask to the Node.</div></div>",6707:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6707\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_inputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::InputRange value for the specified ChannelMask and excitation voltage, to the Node.</div></div>",6708:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6708\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> read_hardwareOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the hardware offset for the specified ChannelMask from the Node.</div></div>",6709:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6709\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_hardwareOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td></td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the hardware offset value for the specified ChannelMask to the Node.</div></div>",6710:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6710\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::Filter read_antiAliasingFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the anti-aliasing filter for the specified ChannelMask from the Node.</div></div>",6711:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6711\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_antiAliasingFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Filter&nbsp;</td><td></td><td class=\"PName last\">filter</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the anti-aliasing filter value for the specified ChannelMask to the Node.</div></div>",6712:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6712\" class=\"NDPrototype NoParameterForm\">WirelessTypes::ChannelFrequencyClass read_cfcFilterConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the channel frequency class filter option set on the Node.</div></div>",6713:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6713\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_cfcFilterConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelFrequencyClass&nbsp;</td><td class=\"PName last\">cfc</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the specified channel frequency class filter option to the Node.</div></div>",6714:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6714\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::Filter read_lowPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the low-pass filter for the specified ChannelMask from the Node.</div></div>",6715:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6715\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_lowPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Filter&nbsp;</td><td></td><td class=\"PName last\">filter</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the low-pass filter value for the specified ChannelMask to the Node.</div></div>",6716:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6716\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::HighPassFilter read_highPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the high-pass filter for the specified ChannelMask from the Node.</div></div>",6717:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6717\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_highPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">HighPassFilter&nbsp;</td><td></td><td class=\"PName last\">filter</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the high-pass filter value for the specified ChannelMask to the Node.</div></div>",6718:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6718\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> read_gaugeFactor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the gauge factor for the specified ChannelMask from the Node.</div></div>",6719:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6719\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_gaugeFactor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td></td><td class=\"PName last\">gaugeFactor</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the gauge factor value for the specified ChannelMask to the Node.</div></div>",6720:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6720\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::ThermocoupleType read_thermoType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the WirelessTypes::ThermocoupleType from the Node.</div></div>",6721:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6721\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_thermoType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ThermocoupleType&nbsp;</td><td></td><td class=\"PName last\">thermocouple</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::ThermocoupleType to the Node.&nbsp; This assumes thermocouple type is supported.</div></div>",6722:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6722\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">TempSensorOptions read_tempSensorOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the TempSensorOptions from the Node.</div></div>",6723:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6723\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_tempSensorOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TempSensorOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the TempSensorOptions to the Node.&nbsp; This assumes TempSensorOptions are supported.</div></div>",6724:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6724\" class=\"NDPrototype NoParameterForm\">WirelessTypes::Voltage read_excitationVoltage() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::Voltage from the Node.</div></div>",6725:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6725\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_excitationVoltage(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td class=\"PName last\">voltage</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::Voltage to the Node.&nbsp; This assumes Excitation Voltage configuration is supported.</div></div>",6726:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6726\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> read_debounceFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the Debounce Filter from the Node.</div></div>",6727:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6727\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_debounceFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td></td><td class=\"PName last\">milliseconds</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the Debounce Filter to the Node.&nbsp; This assumes Debounce Filter is supported.</div></div>",6728:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6728\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> read_pullUpResistor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the pull-up resistor flag from the Node.&nbsp; This assumes pull-up resistor configuration is supported by the Node.</div></div>",6729:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6729\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_pullUpResistor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td></td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the pull-up resistor flag to the Node.&nbsp; This assumes pull-up resistor configuration is supported by the Node.</div></div>",6730:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6730\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SensorOutputMode read_sensorMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::SensorOutputMode from the Node.</div></div>",6731:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6731\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_sensorMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SensorOutputMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Write the WirelessTypes::SensorOutputMode to the Node.</div></div>",6732:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6732\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_activitySense(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ActivitySense&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the ActivitySense options from the Node.&nbsp; This assumes activity sense configuration is supported by the Node.</div></div>",6733:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6733\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_activitySense(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ActivitySense&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the ActivitySense options to the Node.&nbsp; This assumes fatigue options configuration is supported by the Node.</div></div>",6734:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6734\" class=\"NDPrototype NoParameterForm\">WirelessTypes::FatigueMode read_fatigueMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the &lt;WirelessTypes::FatigeMode&gt; from the Node.</div></div>",6735:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6735\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_fatigueOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">FatigueOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the FatigueOptions from the Node.&nbsp; This assumes fatigue options configuration is supported by the Node.</div></div>",6736:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6736\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_fatigueOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">FatigueOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the FatigueOptions to the Node.&nbsp; This assumes fatigue options configuration is supported by the Node.</div></div>",6737:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6737\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_histogramOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">HistogramOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the HistogramOptions from the Node.&nbsp; This assumes histogram options configuration is supported by the Node.</div></div>",6738:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6738\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_histogramOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HistogramOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the HistogramOptions to the Node.&nbsp; This assumes histogram options configuration is supported by the Node and all options are valid.</div></div>",6739:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6739\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_eventTriggerOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">EventTriggerOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the EventTriggerOptions from the Node.&nbsp; This assumes Event Trigger is supported by the Node.</div></div>",6740:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6740\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_eventTriggerOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EventTriggerOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\">map&lt;<span class=\"SHKeyword\">uint8</span>, LinearEquation&gt;&nbsp;</td><td></td><td class=\"PName last\">calibrations</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the EventTriggerOptions to the Node.&nbsp; This assumes Event Trigger is supported by the Node and all options are valid.</div></div>",6741:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6741\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> read_eventTriggerDurations(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">pre,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">post</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the pre and post durations for event trigger from the Node.&nbsp; This assumes Event Trigger is supported by the Node.</div></div>",6742:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6742\" class=\"NDPrototype NoParameterForm\">BitMask read_eventTriggerMask() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the triger mask for event trigger from the Node.&nbsp; This assumes Event Trigger is supported by the Node.</div></div>",6743:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6743\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> clearHistogram()</div><div class=\"TTSummary\">Clears the Histogram on the Node.&nbsp; This assumes histogram options configuration is supported by the Node.</div></div>",6744:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6744\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_lostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the lost beacon timeout value from the Node.&nbsp; A value of 0 means the timeout is disabled.&nbsp; This assumes lost beacon timeout is supported by the Node.</div></div>",6745:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6745\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_lostBeaconTimeout(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">minutes</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the lost beacon timeout value, in minutes, to the Node.&nbsp; This assumes the value is within range of a valid value.</div></div>",6746:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6746\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> read_diagnosticInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the diagnostic packet interval value from the Node.&nbsp; A value of 0 means the diagnostic packet is disabled.&nbsp; This assumes diagnostic info is supported by the Node.</div></div>",6747:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6747\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_diagnosticInterval(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">seconds</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the diagnostic packet interval value, in seconds, to the Node.&nbsp; This assumes diagnostic info is supported by the Node.</div></div>",6748:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6748\" class=\"NDPrototype NoParameterForm\">WirelessTypes::StorageLimitMode read_storageLimitMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the storage limit mode from the Node.</div></div>",6749:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6749\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_storageLimitMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">StorageLimitMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the storage limit mode to the Node.&nbsp; This assumes it is supported by the Node.</div></div>",6750:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6750\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DataMode read_dataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the &lt;DataMode&gt; from the Node.</div></div>",6751:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6751\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_dataMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::DataMode to the Node.</div></div>",6752:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6752\" class=\"NDPrototype NoParameterForm\">WirelessTypes::WirelessSampleRate read_derivedSampleRate() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the Derived Sample Rate from the Node.&nbsp; This assumes Derived Channels are supported by the Node.</div></div>",6753:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6753\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_derivedSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">WirelessSampleRate&nbsp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the Derived Sample Rate to the Node.&nbsp; This assumes Derived Channels are supported by the Node.</div></div>",6754:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6754\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">ChannelMask read_derivedChannelMask(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td class=\"PName last\">category</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the Derived Channel Mask from the Node for the specified &lt;WirelessTypes::DerivedChannel&gt;.&nbsp; This assumes Derived Channels are supported by the Node, and that the given category is supported.</div></div>",6755:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6755\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_derivedChannelMask(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td></td><td class=\"PName last\">category,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes a Derived Channel Mask to the Node for the specified WirelessTypes::DerivedCategory.&nbsp; This assumes Derived Channels are supported by the Node, and that the given category is supported.</div></div>",6756:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6756\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DerivedVelocityUnit read_derivedVelocityUnit() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::DerivedVelocityUnit from the Node.</div></div>",6757:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6757\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> write_derivedVelocityUnit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedVelocityUnit&nbsp;</td><td class=\"PName last\">unit</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the WirelessTypes::DerivedVelocityUnit to the Node.&nbsp; This assumes Derived Channels are supported by the Node, and that the given derivedChannel is supported.</div></div>"});