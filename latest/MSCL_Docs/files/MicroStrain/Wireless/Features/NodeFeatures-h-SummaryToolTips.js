NDSummary.OnToolTipsLoaded("File:MicroStrain/Wireless/Features/NodeFeatures.h",{7053:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype7053\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">NodeFeatures</div></div></div><div class=\"TTSummary\">Contains information on which features are supported by a WirelessNode.</div></div>",7055:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7055\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">NodeFeatures(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">NodeInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">info</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a NodeFeatures object.</div></div>",7057:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype7057\" class=\"NDPrototype NoParameterForm\">NodeInfo m_nodeInfo</div><div class=\"TTSummary\">The NodeInfo object containing basic information retreived from eeprom about the Node.</div></div>",7058:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype7058\" class=\"NDPrototype NoParameterForm\">WirelessChannels m_channels</div><div class=\"TTSummary\">Contains all of the supported channels for this Node.</div></div>",7059:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype7059\" class=\"NDPrototype NoParameterForm\">ChannelGroups m_channelGroups</div><div class=\"TTSummary\">Contains all of the ChannelGroups that are supported by this Node.</div></div>",7061:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7061\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::unique_ptr&lt;NodeFeatures&gt; create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">NodeInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">info</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Builds and returns a NodeFeatures pointer based on the given parameters.</div></div>",7062:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7062\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> addCalCoeffChannelGroup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td></td><td class=\"PName last\">channelNumber,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">slopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">actionIdEeprom</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a cal coefficient (Linear Equation, unit, equation type) to the channel groups for the specified channel.</div></div>",7063:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7063\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> addCalCoeffChannelGroup_withFactoryCal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td></td><td class=\"PName last\">channelNumber,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">slopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">actionIdEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">factorySlopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">factoryActionIdEeprom</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a cal coefficient with factory cal values (Linear Equation, unit, equation type, factory cal) to the channel groups for the specified channel.</div></div>",7064:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7064\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::SettlingTime maxFilterSettlingTime_A(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max filter settling time allowed by the given SampleRate.&nbsp; This is version A of this function. Different nodes use different versions.</div></div>",7065:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7065\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::SettlingTime maxFilterSettlingTime_B(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max filter settling time allowed by the given SampleRate.&nbsp; This is version B of this function. Different nodes use different versions.</div></div>",7066:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7066\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime_A(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> WirelessTypes::</td><td class=\"PType\">WirelessSampleRates&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rates</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max WirelessTypes::WirelessSampleRate allowed by the given WirelessTypes::SettlingTime.&nbsp; This is version A of this function. Different nodes use different versions.</div></div>",7067:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7067\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime_B(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> WirelessTypes::</td><td class=\"PType\">WirelessSampleRates&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rates</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max WirelessTypes::WirelessSampleRate allowed by the given WirelessTypes::SettlingTime.&nbsp; This is version B of this function. Different nodes use different versions.</div></div>",7068:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7068\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint32</span> normalizeNumSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">sweeps</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the number of sweeps so that it is within range and a multiple of 100 (rounds up to next multiple).</div></div>",7069:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7069\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">TimeSpan normalizeTimeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeSpan&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">time</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes a TimeSpan so that it is within an acceptable range for setting the timeBetweenBursts.&nbsp; A valid range is between 1 second and 24 hours. Seconds above 32767 will be rounded to minutes.&nbsp; When setting the time between bursts, you should also call minTimeBetweenBursts and verify it is greater than this.</div></div>",7070:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7070\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">const</span> EepromLocation&amp; findEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td></td><td class=\"PName last\">setting,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Finds the EepromLocation for the provided setting and channel mask pair.</div></div>",7071:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7071\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> anyChannelGroupSupports(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td class=\"PName last\">setting</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if any channel group on the Node supports the given WirelessTypes::ChannelGroupSetting.</div></div>",7072:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7072\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> ramBufferSize() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the RAM buffer size (in bytes) for the Node.</div></div>",7073:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7073\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> anyChannelGroupSupports(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td class=\"PName last\">setting,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if any channel group, with the specified channel number, supports the given WirelessTypes::ChannelGroupSetting.</div></div>",7074:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7074\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> WirelessChannels&amp; channels() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the WirelessChannels of this Node.</div></div>",7075:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7075\" class=\"NDPrototype NoParameterForm\">ChannelGroups channelGroups() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the ChannelGroups supported by this Node.</div></div>",7076:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7076\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::ChannelType channelType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the WirelessTypes::ChannelType for the requested channel number.</div></div>",7077:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7077\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsChannelSetting(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td></td><td class=\"PName last\">setting,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if the Node supports a given WirelessTypes::ChannelGroupSetting for the given ChannelMask.</div></div>",7078:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7078\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Input Range for any of its ChannelGroups.</div></div>",7079:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7079\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRangePerExcitationVoltage() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Input Range for any of its ChannelGroups, and has different input ranges depending on a configurable excitation voltage.</div></div>",7080:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7080\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHardwareOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Hardware Offset for any of its ChannelGroups.</div></div>",7081:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7081\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAntiAliasingFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Anti-Aliasing Filter for any of its ChannelGroups.</div></div>",7082:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7082\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLowPassFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Low-Pass Filter for any of its ChannelGroups.</div></div>",7083:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7083\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHighPassFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports High-Pass Filter for any of its ChannelGroups.</div></div>",7084:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7084\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGaugeFactor() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Gauge Factor for any of its ChannelGroups.</div></div>",7085:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7085\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGaugeResistance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Gauge Resistance option.</div></div>",7086:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7086\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNumActiveGauges() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Number of Active Gauges option.</div></div>",7087:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7087\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Lost Beacon Timeout option.</div></div>",7088:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7088\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPullUpResistor() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Pull-up Resistor option.</div></div>",7089:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7089\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFilterSettlingTime() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Filter Settling Time for any of its ChannelGroups.</div></div>",7090:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7090\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsThermocoupleType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Thermocouple Type for any of its ChannelGroups.</div></div>",7091:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7091\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsTempSensorOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the TempSensorOptions configuration for any of its ChannelGroups.</div></div>",7092:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7092\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDebounceFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Debounce Filter configuration for any of its ChannelGroups.</div></div>",7093:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7093\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports FatigueOptions configuration.</div></div>",7094:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7094\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsYoungsModConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Young\'s Modulus (part of FatigueOptions) configuration.</div></div>",7095:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7095\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPoissonsRatioConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Poisson\'s Ratio (part of FatigueOptions) configuration.</div></div>",7096:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7096\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueDebugModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports enabling Debug Mode (part of FatigueOptions) configuration.</div></div>",7097:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7097\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Fatigue Mode (part of FatigueOptions) configuration.</div></div>",7098:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7098\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports HistogramOptions configuration.</div></div>",7099:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7099\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramRateConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Histogram transmit rate (part of HistogramOptions) configuration.</div></div>",7100:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7100\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramEnableConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports turning Histograms on and off (part of FatigueOptions).</div></div>",7101:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7101\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsActivitySense() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the ActivitySense feature.</div></div>",7102:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7102\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoBalance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Auto Balance command for any of its ChannelGroups.</div></div>",7103:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7103\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLegacyShuntCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the legacy Shunt Cal for any of its ChannelGroups.</div></div>",7104:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7104\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoCal_shm() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoCal SHM-Link command.</div></div>",7105:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7105\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoCal_shm201() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoCal SHM-Link-201 command.</div></div>",7106:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7106\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoShuntCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports AutoShuntCal on any of this ChannelGroups.</div></div>",7107:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7107\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGetFactoryCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node has factory calibrations stored for any of its ChannelGroups.</div></div>",7108:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7108\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLimitedDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports setting a limited duration of sampling.</div></div>",7109:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7109\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEventTrigger() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Event Trigger sampling.</div></div>",7110:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7110\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDiagnosticInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports sending Diagnostic Info.</div></div>",7111:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7111\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLoggedData() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports logging to internal memory.</div></div>",7112:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7112\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPoll() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the poll command.</div></div>",7113:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7113\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorDelayConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of sensor delay.</div></div>",7114:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7114\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorDelayAlwaysOn() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports setting the sensor delay value to &quot;Always On.&quot;</div></div>",7115:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7115\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorOutputMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the Sensor Output Mode.</div></div>",7116:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7116\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCfcFilterConfiguration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the channel frequency class filter.</div></div>",7117:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7117\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsChannel(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a specific channel is supported (can be enabled) by this Node.</div></div>",7118:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7118\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsSamplingMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::SamplingMode is supported by this Node.</div></div>",7119:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7119\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">WirelessSampleRate&nbsp;</td><td class=\"PName last\">sampleRate,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a sample rate is supported by the Node for the given WirelessTypes::SamplingMode.</div></div>",7120:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7120\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsCommunicationProtocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">protocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::CommProtocol is supported by this Node.</div></div>",7121:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7121\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td class=\"PName last\">dataFormat</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataFormat is supported by this Node.</div></div>",7122:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7122\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDefaultMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DefaultMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DefaultMode is supported by this Node.</div></div>",7123:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7123\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataCollectionMethod(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">collectionMethod</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataCollectionMethod is supported by this Node.</div></div>",7124:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7124\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransmitPower&nbsp;</td><td class=\"PName last\">power,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::TransmitPower is supported by this Node.</div></div>",7125:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7125\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataMode is supported by this Node.</div></div>",7126:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7126\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsTransducerType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransducerType&nbsp;</td><td class=\"PName last\">transducerType</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::TransducerType is supported by this Node.</div></div>",7127:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7127\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">FatigueMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::FatigueMode is supported by this Node.</div></div>",7128:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7128\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::InputRange is supported by this Node for the given ChannelMask.</div></div>",7129:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7129\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::InputRange is supported by this Node for the given ChannelMask.</div></div>",7130:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7130\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCentisecondEventDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node configures event duration in 10s of milliseconds or not.</div></div>",7131:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7131\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGetDiagnosticInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Get Diagnostic Info command.</div></div>",7132:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7132\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNonSyncLogWithTimestamps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the version of Non-Sync Sampling that will add timestamps when logging.&nbsp; If the Node does not support this, when downloading logged data from the Node, no timestamp information will be given.</div></div>",7133:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7133\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedCategory(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td class=\"PName last\">category</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if the Node supports a specific WirelessTypes::DerivedCategory.</div></div>",7134:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7134\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsRawDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports any form of the Raw Data Mode (raw only, raw + derived, etc).</div></div>",7135:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7135\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports any form of the Derived Data Mode (derived only, raw + derived, etc).</div></div>",7136:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7136\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedVelocityUnitConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the Derived Velocity Unit.</div></div>",7137:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7137\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsExcitationVoltageConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of its Excitation Voltage.</div></div>",7138:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7138\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLowBatteryThresholdConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of its low battery threshold.</div></div>",7139:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7139\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td></td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given &lt;SamplingMode&gt;, ChannelMask, and WirelessTypes::DataCollectionMethod.</div></div>",7140:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7140\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td class=\"PName last\">filterSettlingTime,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given WirelessTypes::SettlingTime.</div></div>",7141:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7141\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRateForLowPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Filter&nbsp;</td><td></td><td class=\"PName last\">lowPassFilter,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td></td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given Low Pass Filter.</div></div>",7142:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7142\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::SettlingTime maxFilterSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::SettlingTime available for the given SampleRate.</div></div>",7143:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7143\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> minInactivityTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum inactivity timeout (in seconds) that is supported.</div></div>",7144:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7144\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> minLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum lost beacon timeout (in minutes) that is supported.&nbsp; Note: A value of 0 disable the lost beacon timeout.</div></div>",7145:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7145\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> maxLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum lost beacon timeout (in minutes) that is supported.</div></div>",7146:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7146\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> minCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum check radio interval (in seconds) that is supported.</div></div>",7147:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7147\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> maxCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum check radio interval (in seconds) that is supported.</div></div>",7148:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7148\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> minSweeps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum number of sweeps that can be assigned for the duration of a continuous sampling session.</div></div>",7149:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7149\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum number of sweeps that can be assigned for a given WirelessTypes::SamplingMode.&nbsp; This is the duration of each burst if in Burst Sync Sampling mode, or the total duration of sampling in other sampling modes.</div></div>",7150:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7150\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxSweepsPerBurst(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum number of sweeps per burst that can be assigned for a Burst Sync Sampling session.</div></div>",7151:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7151\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> TimeSpan minTimeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawChannels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedChannelMasks&nbsp;</td><td></td><td class=\"PName last\">derivedChannelMasks,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawSampleRate,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td></td><td class=\"PName last\">sweepsPerBurst,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td></td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum time that can be assigned for a Burst Sync Sampling session.</div></div>",7152:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7152\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const uint32</span> minSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum sensor delay value (in microseconds) that is supported.</div></div>",7153:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7153\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const uint32</span> maxSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum sensor delay value (in microseconds) that is supported.</div></div>",7154:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7154\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const uint32</span> defaultSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the default sensor delay value (in microseconds) that is supported.</div></div>",7155:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7155\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxEventTriggerTotalDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawChannels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedChannelMasks&nbsp;</td><td></td><td class=\"PName last\">derivedChannelMasks,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawSampleRate,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">derivedDataRate</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the max event trigger duration (in milliseconds) that can be applied for both the pre and post event durations (combined).</div></div>",7156:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7156\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> normalizeEventDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">duration</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the Event Trigger duration so that it is an acceptable value.</div></div>",7157:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7157\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> normalizeSensorDelay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">delay</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the sensor delay so that it is an acceptable value.</div></div>",7158:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7158\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numDamageAngles() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of damage angles (see FatigueOptions) on this Node.</div></div>",7159:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7159\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numSnCurveSegments() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of Sn Curve segments (see FatigueOptions) on this Node.</div></div>",7160:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7160\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numEventTriggers() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of supported event triggers on this Node.</div></div>",7161:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7161\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DefaultModes defaultModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DefaultModes that are supported by this Node.</div></div>",7162:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7162\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataCollectionMethods dataCollectionMethods() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DataCollectionMethods that are supported by this Node.</div></div>",7163:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7163\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataFormats dataFormats() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DataFormats that are supported by this Node.</div></div>",7164:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7164\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::SamplingModes samplingModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::SamplingModes that are supported by this Node.</div></div>",7165:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7165\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates sampleRates(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::WirelessSampleRates that are supported by this Node for the given sampling mode.</div></div>",7166:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7166\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates derivedDataRates() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::WirelessSampleRates that are supported by this Node for Derived Channels.&nbsp; These are the rates that the Derived Data will be calculated/sent. The standard sampleRates still apply in derived mode and control the sample rate of the raw channels used in the derived data calculations.</div></div>",7167:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7167\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransmitPowers transmitPowers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::TransmitPowers that are supported by this Node, for the given WirelessTypes::CommProtocol.&nbsp; Note: This list is dependent on the WirelessTypes::RegionCode of the device. If this changes, this function should be called again.</div></div>",7168:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7168\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransmitPowers transmitPowers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::TransmitPowers that are supported by this Node, for the given WirelessTypes::RegionCode and WirelessTypes::CommProtocol.</div></div>",7169:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7169\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::CommProtocols commProtocols() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::CommProtocols that are supported by this Node.</div></div>",7170:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7170\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::SensorOutputModes sensorOutputModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::SensorOutputModes that are supported by this Node.</div></div>",7171:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7171\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::CfcFilters cfcFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::ChannelFrequencyClass options that are supportedby this Node.</div></div>",7172:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7172\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates histogramTransmitRates() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Histogram Transmit Rates that are supported by this Node.</div></div>",7173:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7173\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::FatigueModes fatigueModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::FatigueModes that are supported by this Node.</div></div>",7174:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7174\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Filters antiAliasingFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Anti-Aliasing WirelessTypes::Filters that are supported by this Node.</div></div>",7175:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7175\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Filters lowPassFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Low-Pass WirelessTypes::Filters that are supported by this Node.</div></div>",7176:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7176\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::HighPassFilters highPassFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the High-Pass WirelessTypes::Filters that are supported by this Node.</div></div>",7177:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7177\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::StorageLimitModes storageLimitModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::StorageLimitModes that are supported by this Node.</div></div>",7178:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7178\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> InputRanges inputRanges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of InputRanges that are supported by this Node for the specified channel mask.</div></div>",7179:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7179\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> InputRanges inputRanges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of WirelessTypes::InputRanges that are supported by this Node for the specified channel mask, for the given Excitation WirelessTypes::Voltage.</div></div>",7180:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7180\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataModes dataModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::DataModes that are supported by this Node.</div></div>",7181:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7181\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransducerTypes transducerTypes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::TransducerTypes that are supported by this Node.</div></div>",7182:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7182\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DerivedChannelMasks channelsPerDerivedCategory() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a map of WirelessTypes::DerivedCategory to ChannelMasks that are supported by this Node.&nbsp; The ChannelMask indicates the raw channels that are available for the derived category.</div></div>",7183:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7183\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Voltages excitationVoltages() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::Voltages that are supported by the Node for configuration.</div></div>",7184:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7184\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::VoltageType adcVoltageInputType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the input voltage type of the ADC for this node.</div></div>",7185:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7185\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower maxTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::TransmitPower that is supported for the given parameters.</div></div>",7186:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7186\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower maxTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::TransmitPower that is supported for the given parameters, using the Node\'s current region code.</div></div>",7187:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7187\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower minTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum WirelessTypes::TransmitPower that is supported for the given parameters.</div></div>",7188:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7188\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower minTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum WirelessTypes::TransmitPower that is supported for the given parameters, using the Node\'s current region code.</div></div>",7189:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7189\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNewTransmitPowers() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the new transmit powers (true), or the old ones (false).</div></div>",7190:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7190\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoBalance2() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoBalance (Version 2) command.</div></div>",7191:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7191\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSleepIntervalSeconds() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports a sleep interval eeprom directly in seconds.</div></div>",7192:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7192\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEepromCommitViaRadioReset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if eeprom changes can be committed by only cycling the radio, instead of cycling power.</div></div>",7193:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7193\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFlashId() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Flash ID eeprom.</div></div>",7194:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7194\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsStorageLimitModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuring storage limit mode.</div></div>",7195:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7195\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> datalogDownloadVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the version of datalogging download to use.</div></div>",7196:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7196\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::DelayVersion sensorDelayVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the version of sensor delay that the Node supports.</div></div>",7197:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7197\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> usesLegacySensorDelayAlwaysOn() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node uses the legacy value of 10,000 for always on (true) or the new value of 65,535 for always on (false).</div></div>",7198:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7198\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> usesFloatEventTriggerVal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node uses floating point for event trigger values.&nbsp; Older nodes used uint16 (bits).</div></div>",7199:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7199\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> onlySupportsRawDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the raw data mode is the only data mode supported.</div></div>",7200:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7200\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDataModeEeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Data Mode eeprom location is supported.</div></div>",7201:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7201\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCommProtocolEeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Communication Protocol eeprom location is supported.</div></div>",7202:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype7202\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEeprom1024AndAbove() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports reading eeprom location 1024 and above.</div></div>"});