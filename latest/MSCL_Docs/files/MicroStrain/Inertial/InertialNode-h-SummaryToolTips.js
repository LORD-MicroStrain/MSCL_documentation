NDSummary.OnToolTipsLoaded("File:MicroStrain/Inertial/InertialNode.h",{2623:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2623\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">InertialNode</div></div></div><div class=\"TTSummary\">A class representing a MicroStrain Inertial Node</div></div>",2625:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2625\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">explicit</span> InertialNode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Connection&nbsp;</td><td class=\"PName last\">connection</td></tr></table></td><td class=\"PAfterParameters\">) : MipNode(connection)</td></tr></table></div><div class=\"TTSummary\">Creates an InertialNode object.</div></div>",2626:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2626\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipDataPackets getDataPackets(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">timeout&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">maxPackets&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets up to the requested amount of data packets that have been collected.</div></div>",2627:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2627\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> totalPackets()</div><div class=\"TTSummary\">Gets the total number of data packets that are currently in the buffer.</div></div>",2628:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2628\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> pollData(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td></td><td class=\"PName\">dataClass,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> MipTypes::</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName\">fields&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">MipTypes::MipChannelFields()</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Polls the device for a message with the specified fields, for the specified data class.&nbsp; This will cause the device to send a single data packet.</div></div>",2629:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2629\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> getDataRateBase(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the Data decimation base for the data rate calculations of the specified &lt;InertialType&gt;.</div></div>",2630:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2630\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannels getActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the current active channel fields for the specified MipTypes::DataClass.</div></div>",2631:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2631\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td></td><td class=\"PName last\">dataClass,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipChannels&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the current active channel fields for the specified MipTypes::DataClass.&nbsp; Note that this function does not add to the existing message format (active channels), but overwrites it entirely.</div></div>",2632:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2632\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> saveActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Saves the current message format of the specified MipTypes::DataClass\'s data packet.</div></div>",2633:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2633\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setFactoryStreamingChannels(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">FactoryStreamingOption&nbsp;</td><td class=\"PName last\">option</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Applies the factory streaming channels to the message format based on the specified action option.</div></div>",2634:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2634\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">DeviceCommPort getInterfaceControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">interfaceId</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the current comm port interface configuration for the specified ID.&nbsp; This includes the port type, ID and input/output protocols currently configured.</div></div>",2635:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2635\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInterfaceControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">DeviceCommPort&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">portInterface</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the specified comm port interface configuration for the node.&nbsp; Note: See the device\'s manual for possible configurations and limitations.</div></div>",2636:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2636\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInterfaceControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">interfaceId,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> DeviceCommPort::</td><td class=\"PType\">Protocol&nbsp;</td><td class=\"PName last\">inputProtocols,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> DeviceCommPort::</td><td class=\"PType\">Protocol&nbsp;</td><td class=\"PName last\">outputProtocols</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the specified comm port interface configuration for the node.&nbsp; Note: See the device\'s manual for possible configurations and limitations.</div></div>",2637:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2637\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> getCommunicationMode() <span class=\"SHKeyword\">override</span></div><div class=\"TTSummary\">Gets the current communication mode that the node is in.</div></div>",2638:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2638\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setCommunicationMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">communicationMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div><div class=\"TTSummary\">Sets the communication mode for the node.&nbsp; Note: The node info will be reset when doing this and therefore will require being fetched again the next time it is requested.</div></div>",2639:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2639\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> isDataStreamEnabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Checks whether continuous data streaming is enabled for the specified data class.</div></div>",2640:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2640\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableDataStream(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName\">dataClass,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">enable&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">resumeStreaming&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables continuous data streaming for the node.</div></div>",2641:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2641\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> resetFilter()</div><div class=\"TTSummary\">Resets the filter to the initialize state.&nbsp; Note: If the auto-initialization feature is disabled, the initial attitude or heading must be set in order to enter the run state after a reset.</div></div>",2642:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2642\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> runFilter()</div><div class=\"TTSummary\">Runs the filter when configured to wait in initialization for Run command.&nbsp; Note: Most devices run when initial values are sent - see the device DCP for details regarding supported commands and filter initialization workflows.</div></div>",2643:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2643\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getAutoInitialization()</div><div class=\"TTSummary\">Gets the state of the automatic initialization upon device startup.</div></div>",2644:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2644\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAutoInitialization(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the automatic initialization upon device startup.</div></div>",2645:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2645\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getAltitudeAid()</div><div class=\"TTSummary\">Gets the state of the altitude aid upon device startup.</div></div>",2646:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2646\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAltitudeAid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the altitude aid upon device startup.</div></div>",2647:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2647\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getPitchRollAid()</div><div class=\"TTSummary\">Gets the state of the pitch/roll aid upon device startup.</div></div>",2648:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2648\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPitchRollAid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the pitch/roll aid upon device startup.</div></div>",2649:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2649\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableVerticalGyroConstraint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the Vertical Gyro Constraint control.</div></div>",2650:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2650\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> verticalGyroConstraintEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the enabled/disabled state of the Vertical Gyro Constraint control.</div></div>",2651:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2651\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableWheeledVehicleConstraint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the Wheeled Vehicle Constraint control.</div></div>",2652:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2652\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> wheeledVehicleConstraintEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the enabled/disabled state of the Wheeled Vehicle Constraint control.</div></div>",2653:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2653\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setVelocityZUPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ZUPTSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">ZUPTSettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the velocity ZUPT control.</div></div>",2654:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2654\" class=\"NDPrototype NoParameterForm\">ZUPTSettingsData getVelocityZUPT()</div><div class=\"TTSummary\">Gets the state of the velocity ZUPT control.</div></div>",2655:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2655\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAngularRateZUPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ZUPTSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">ZUPTSettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the angular rate ZUPT control.</div></div>",2656:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2656\" class=\"NDPrototype NoParameterForm\">ZUPTSettingsData getAngularRateZUPT()</div><div class=\"TTSummary\">Gets the state of the angular rate ZUPT control.</div></div>",2657:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2657\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> cmdedVelZUPT()</div><div class=\"TTSummary\">Performs Commanded Zero Velocity Update.</div></div>",2658:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2658\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> cmdedAngRateZUPT()</div><div class=\"TTSummary\">Performs Commanded Zero Angular Rate Update.</div></div>",2659:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2659\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialAttitude(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">attitude</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial attitude.&nbsp; Note: This command can only be issued in the &quot;INIT&quot; state and should be used with a good estimate of the vehicle attitude.</div></div>",2660:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2660\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialHeading(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">heading</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial heading.&nbsp; Note: This command can only be issued in the &quot;INIT&quot; state and should be used with a good estimate of heading. The device will use this value in conjunction with the output of the accelerometers to determine the initial attitude estimate.</div></div>",2661:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2661\" class=\"NDPrototype NoParameterForm\">FilterInitializationValues getInitialFilterConfiguration()</div><div class=\"TTSummary\">Gets the initial filter configuration values.</div></div>",2662:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2662\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialFilterConfiguration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">FilterInitializationValues&nbsp;</td><td class=\"PName last\">filterConfig</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial filter configuration values.&nbsp; Note: Changes from this command will only be applied if the filter is in the Initialization state (not Running) or on filter reset.</div></div>",2663:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2663\" class=\"NDPrototype NoParameterForm\">EulerAngles getSensorToVehicleRotation_eulerAngles()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation using roll, pitch, and yaw Euler angles.&nbsp; These angles define the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the rotation, but they are functionally equivalent.</div></div>",2664:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2664\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_eulerAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">angles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation using roll, pitch, and yaw Euler angles (in radians).&nbsp; These angles define the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the rotation, but they are functionally equivalent.</div></div>",2665:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2665\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSensorToVehicleRotation_matrix()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation in a row-major direction cosine matrix format.&nbsp; This matrix defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the rotation, but they are functionally equivalent.</div></div>",2666:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2666\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_matrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dcm</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation with a row-major direction cosine matrix. The specified matrix must be orthonormal.&nbsp; This matrix defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the rotation, but they are functionally equivalent.</div></div>",2667:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2667\" class=\"NDPrototype NoParameterForm\">Quaternion getSensorToVehicleRotation_quaternion()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation in quaternion format.&nbsp; This quaternion defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the rotation, due to normalization.</div></div>",2668:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2668\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_quaternion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Quaternion&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rotation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation in quaternion format.&nbsp; This quaternion defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the rotation, due to normalization.</div></div>",2669:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2669\" class=\"NDPrototype NoParameterForm\">EulerAngles getSensorToVehicleTransform_eulerAngles()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation using roll, pitch, and yaw Euler angles.&nbsp; These angles define the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the transformation, but they are functionally equivalent.</div></div>",2670:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2670\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_eulerAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">angles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation using roll, pitch, and yaw Euler angles (in radians).&nbsp; These angles define the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the transformation, but they are functionally equivalent.</div></div>",2671:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2671\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSensorToVehicleTransform_matrix()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation in a row-major direction cosine matrix format.&nbsp; This matrix defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the transformation, but they are functionally equivalent.</div></div>",2672:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2672\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_matrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dcm</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation with a row-major direction cosine matrix. The specified matrix must be orthonormal.&nbsp; This matrix defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the transformation, but they are functionally equivalent.</div></div>",2673:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2673\" class=\"NDPrototype NoParameterForm\">Quaternion getSensorToVehicleTransform_quaternion()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation in quaternion format.&nbsp; This quaternion defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the transformation, due to normalization.</div></div>",2674:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2674\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_quaternion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Quaternion&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">transformation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation in quaternion format.&nbsp; This quaternion defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the transformation, due to normalization.</div></div>",2675:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2675\" class=\"NDPrototype NoParameterForm\">PositionOffset getSensorToVehicleOffset()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame offset, expressed in the sensor frame.</div></div>",2676:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2676\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">PositionOffset&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame offset, expressed in the sensor frame.</div></div>",2677:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2677\" class=\"NDPrototype NoParameterForm\">PositionOffset getAntennaOffset()</div><div class=\"TTSummary\">Gets the antenna offset, expressed in the sensor frame.</div></div>",2678:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2678\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">PositionOffset&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the antenna offset, expressed in the sensor frame.</div></div>",2679:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2679\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getGNSSAssistedFixControl()</div><div class=\"TTSummary\">Gets the GNSS Assisted Fix Control.</div></div>",2680:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2680\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGNSSAssistedFixControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enableAssistedFix</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Assisted Fix Control.</div></div>",2681:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2681\" class=\"NDPrototype NoParameterForm\">TimeUpdate getGNSSAssistTimeUpdate()</div><div class=\"TTSummary\">Gets the GNSS Assisted Time Update.</div></div>",2682:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2682\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGNSSAssistTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeUpdate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timeUpdate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Assist Time Update.</div></div>",2683:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2683\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">mscl::<span class=\"SHKeyword\">uint32</span> getGPSTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">TimeFrame&nbsp;</td><td class=\"PName last\">timeFrame</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the GPS time update.</div></div>",2684:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2684\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGPSTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td></td><td class=\"PName last\">MipTypes::TimeFrame,</td></tr><tr><td class=\"PModifierQualifier first\">mscl::</td><td class=\"PType\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">timeData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GPS Time Update.</div></div>",2685:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2685\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setConstellationSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ConstellationSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataToUse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Constellation Settings.</div></div>",2686:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2686\" class=\"NDPrototype NoParameterForm\">ConstellationSettingsData getConstellationSettings()</div><div class=\"TTSummary\">Gets the GNSS Constellation Settings.</div></div>",2687:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2687\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSBASSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SBASSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataToUse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS SBAS Settings.</div></div>",2688:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2688\" class=\"NDPrototype NoParameterForm\">SBASSettingsData getSBASSettings()</div><div class=\"TTSummary\">Gets the GNSS SBAS Settings.</div></div>",2689:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2689\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelerometerBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">biasVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Accelerometer Bias.</div></div>",2690:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2690\" class=\"NDPrototype NoParameterForm\">GeometricVector getAccelerometerBias()</div><div class=\"TTSummary\">Gets the Accelerometer Bias.</div></div>",2691:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2691\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">biasVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Gyro Bias.</div></div>",2692:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2692\" class=\"NDPrototype NoParameterForm\">GeometricVector getGyroBias()</div><div class=\"TTSummary\">Gets the Gyro Bias vector.</div></div>",2693:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2693\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">GeometricVector captureGyroBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">samplingTime</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Runs the Gyro Bias capture routine on the inertial device.</div></div>",2694:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2694\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> findMagnetometerCaptureAutoCalibration()</div><div class=\"TTSummary\">Runs the Magnetometer auto calibration routine on the inertial device.</div></div>",2695:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2695\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> saveMagnetometerCaptureAutoCalibration()</div><div class=\"TTSummary\">Runs the Magnetometer auto calibration routine and saves result as startup settings.</div></div>",2696:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2696\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerSoftIronMatrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">matrix</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Magnetometer Soft Iron matrix.</div></div>",2697:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2697\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getMagnetometerSoftIronMatrix()</div><div class=\"TTSummary\">Gets the Magnetometer Soft Iron matrix.</div></div>",2698:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2698\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerHardIronOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offsetVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer hard iron offset vector.</div></div>",2699:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2699\" class=\"NDPrototype NoParameterForm\">GeometricVector getMagnetometerHardIronOffset()</div><div class=\"TTSummary\">Gets the magnetometer hard iron offset vector.</div></div>",2700:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2700\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setConingAndScullingEnable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables/disables coning and sculling.</div></div>",2701:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2701\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getConingAndScullingEnable()</div><div class=\"TTSummary\">determines whether coning and sculling are enabled.</div></div>",2702:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2702\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setLowPassFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">LowPassFilterConfig&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sets the low-pass filter settings.</div></div>",2703:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2703\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">LowPassFilterConfig getLowPassFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> MipTypes::</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataDescriptors</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the current low-pass filter settings for the given data descriptors</div></div>",2704:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2704\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setComplementaryFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ComplementaryFilterData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the complementary filter settings.</div></div>",2705:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2705\" class=\"NDPrototype NoParameterForm\">ComplementaryFilterData getComplementaryFilterSettings()</div><div class=\"TTSummary\">Gets the current complementary filter settings.</div></div>",2706:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2706\" class=\"NDPrototype NoParameterForm\">DeviceStatusData getBasicDeviceStatus()</div><div class=\"TTSummary\">Gets the basic device status.</div></div>",2707:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2707\" class=\"NDPrototype NoParameterForm\">DeviceStatusData getDiagnosticDeviceStatus()</div><div class=\"TTSummary\">Gets the diagnostic device status.</div></div>",2708:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2708\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendRawRTCM_2_3Message(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">RTCMMessage&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">theMessage</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends a raw RTCM 2.3 message.</div></div>",2709:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2709\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setVehicleDynamicsMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">VehicleModeType&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the vehicle dynamics mode.</div></div>",2710:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2710\" class=\"NDPrototype NoParameterForm\">InertialTypes::VehicleModeType getVehicleDynamicsMode()</div><div class=\"TTSummary\">Gets the vehicle dynamics mode.</div></div>",2711:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2711\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEstimationControlFlags(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EstimationControlOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">flags</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the estimation control flags.</div></div>",2712:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2712\" class=\"NDPrototype NoParameterForm\">EstimationControlOptions getEstimationControlFlags()</div><div class=\"TTSummary\">Gets the estimation control flags.</div></div>",2713:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2713\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInclinationSource(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeographicSourceOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the source for the inclination geographic source command.</div></div>",2714:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2714\" class=\"NDPrototype NoParameterForm\">GeographicSourceOptions getInclinationSource()</div><div class=\"TTSummary\">Gets the source for the inclination geographic source command.</div></div>",2715:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2715\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDeclinationSource(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeographicSourceOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the source for the declination geographic source command.</div></div>",2716:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2716\" class=\"NDPrototype NoParameterForm\">GeographicSourceOptions getDeclinationSource()</div><div class=\"TTSummary\">Gets the source for the declination geographic source command.</div></div>",2717:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2717\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagneticFieldMagnitudeSource(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeographicSourceOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the source for the magnetic field magnitude geographic source command.</div></div>",2718:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2718\" class=\"NDPrototype NoParameterForm\">GeographicSourceOptions getMagneticFieldMagnitudeSource()</div><div class=\"TTSummary\">Gets the source for the field magnitude geographic source command.</div></div>",2719:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Sets the estimation control flags.</div></div>",2720:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Gets the estimation control flags.</div></div>",2721:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2721\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalGNSSUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ExternalGNSSUpdateData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">gnssUpdateData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external GNSS update command.</div></div>",2722:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2722\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setHeadingUpdateControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingUpdateOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingUpdateOptions</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the heading update control flags.</div></div>",2723:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2723\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> tareOrientation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TareAxisValues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">axisValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">uses device orientation relative to the NED frame as the sensor to vehicle rotation.</div></div>",2724:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2724\" class=\"NDPrototype NoParameterForm\">HeadingUpdateOptions getHeadingUpdateControl()</div><div class=\"TTSummary\">Gets the heading update control flags.</div></div>",2725:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2725\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravityErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity magnitude error adaptive measurement settings.</div></div>",2726:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2726\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getGravityErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the gravity magnitude error adaptive measurement settings.</div></div>",2727:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2727\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer magnitude error adaptive measurement settings.</div></div>",2728:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2728\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getMagnetometerErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the magnetometer magnitude error adaptive measurement settings.</div></div>",2729:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2729\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagDipAngleErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer dip angle error adaptive measurement settings.</div></div>",2730:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2730\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getMagDipAngleErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the magnetometer dip angle error adaptive measurement settings.</div></div>",2731:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2731\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer noise standard deviation.</div></div>",2732:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2732\" class=\"NDPrototype NoParameterForm\">GeometricVector getMagNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the magnetometer noise standard deviation.</div></div>",2733:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2733\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity noise standard deviation.</div></div>",2734:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2734\" class=\"NDPrototype NoParameterForm\">GeometricVector getGravNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the gravity noise standard deviation.</div></div>",2735:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2735\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the accelerometer noise standard deviation.</div></div>",2736:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2736\" class=\"NDPrototype NoParameterForm\">GeometricVector getAccelNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the accelerometer noise standard deviation.</div></div>",2737:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2737\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gyroscope noise standard deviation.</div></div>",2738:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2738\" class=\"NDPrototype NoParameterForm\">GeometricVector getGyroNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the gyroscope noise standard deviation.</div></div>",2739:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2739\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPressureAltNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the pressure altitude noise standard deviation.</div></div>",2740:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2740\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">float</span> getPressureAltNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the pressure altitude noise standard deviation.</div></div>",2741:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2741\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setHardIronOffsetProcessNoise(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the hard iron offset process noise.</div></div>",2742:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2742\" class=\"NDPrototype NoParameterForm\">GeometricVector getHardIronOffsetProcessNoise()</div><div class=\"TTSummary\">Gets the hard iron offset process noise.</div></div>",2743:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2743\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelBiasModelParams(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVectors&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the accelerometer bias model parameters.</div></div>",2744:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2744\" class=\"NDPrototype NoParameterForm\">GeometricVectors getAccelBiasModelParams()</div><div class=\"TTSummary\">Gets the accelerometer bias model parameters.</div></div>",2745:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2745\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroBiasModelParams(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVectors&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gyroscope bias model parameters.</div></div>",2746:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2746\" class=\"NDPrototype NoParameterForm\">GeometricVectors getGyroBiasModelParams()</div><div class=\"TTSummary\">Gets the gyroscope bias model parameters.</div></div>",2747:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2747\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSoftIronMatrixProcessNoise(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the soft iron matrix process noise.</div></div>",2748:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2748\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSoftIronMatrixProcessNoise()</div><div class=\"TTSummary\">Gets the soft iron matrix process noise.</div></div>",2749:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2749\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setFixedReferencePosition(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">FixedReferencePositionData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the FixedReferencePositionData data for the specified command.</div></div>",2750:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2750\" class=\"NDPrototype NoParameterForm\">FixedReferencePositionData getFixedReferencePosition()</div><div class=\"TTSummary\">Gets the FixedReferencePositionData data for the specified command.</div></div>",2751:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2751\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGPSDynamicsMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">GPSDynamicsMode&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GPSDynamicsMode.</div></div>",2752:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2752\" class=\"NDPrototype NoParameterForm\">InertialTypes::GPSDynamicsMode getGPSDynamicsMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the GPSDynamicsMode data for this device.</div></div>",2753:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2753\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDevicePowerState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">PowerState&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PowerState for the specified device.</div></div>",2754:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2754\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">InertialTypes::PowerState getDevicePowerState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the PowerState for the specified device.</div></div>",2755:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2755\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDeviceStreamFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">StreamFormat&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the StreamFormat for the specified device.</div></div>",2756:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2756\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">InertialTypes::StreamFormat getDeviceStreamFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the StreamFormat for the specified device.</div></div>",2757:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2757\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSignalConditioningSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SignalConditioningValues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the signal conditioning settings for the node.</div></div>",2758:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2758\" class=\"NDPrototype NoParameterForm\">SignalConditioningValues getSignalConditioningSettings() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the signal conditioning settings for the node.</div></div>",2759:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2759\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEnableDisableMeasurements(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EnableDisableMeasurements&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables/disables estimation filter measurement options for the node.</div></div>",2760:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2760\" class=\"NDPrototype NoParameterForm\">EnableDisableMeasurements getEnableDisableMeasurements() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently enabled estimation filter measurement options for the node.</div></div>",2761:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2761\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravityNoiseMinimum(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity noise minimum for the device.</div></div>",2762:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2762\" class=\"NDPrototype NoParameterForm\">GeometricVector getGravityNoiseMinimum() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the current gravity noise minimum for the device.</div></div>",2763:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2763\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalHeadingUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external heading update command.</div></div>",2764:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2764\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalHeadingUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingData,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeUpdate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timestamp</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external heading update command.</div></div>",2765:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2765\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> aidingMeasurementEnabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">AidingMeasurementSource&nbsp;</td><td class=\"PName last\">aidingSource</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to check whether the specified aiding source is currently enabled.</div></div>",2766:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2766\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableDisableAidingMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">AidingMeasurementSource&nbsp;</td><td class=\"PName last\">aidingSource,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to enable/disable the specified aiding source.</div></div>",2767:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2767\" class=\"NDPrototype NoParameterForm\">AutoAdaptiveFilterOptions getAdaptiveFilterOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">sends the Adaptive Filter Options command (0x0D, 0x53) to get the currently configured auto-adaptive filtering options.</div></div>",2768:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2768\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAdaptiveFilterOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AutoAdaptiveFilterOptions&nbsp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Adaptive Filter Options command (0x0D, 0x53) to set the auto-adaptive filtering options to the specified values.</div></div>",2769:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2769\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">PositionOffset getMultiAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">receiverId</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">sends the Multi Antenna Offset command (0x0D, 0x54) to get the currently configured antenna offset for the specified receiver ID.</div></div>",2770:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2770\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMultiAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">receiverId,</td></tr><tr><td class=\"PType first\">PositionOffset&nbsp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to set the position offset of the specified receiver ID.</div></div>",2771:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2771\" class=\"NDPrototype NoParameterForm\">InertialTypes::PpsSource getPpsSource() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the PPS source currently configured on the device.</div></div>",2772:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2772\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPpsSource(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">PpsSource&nbsp;</td><td class=\"PName last\">ppsSource</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PPS source.</div></div>",2773:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2773\" class=\"NDPrototype NoParameterForm\">OdometerConfiguration getOdometerConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured odometer settings.</div></div>",2774:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2774\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setOdometerConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">OdometerConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the odometer configuration.</div></div>",2775:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2775\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">SensorRange getSensorRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">SensorRange::</td><td class=\"PType\">Type&nbsp;</td><td class=\"PName last\">sensorRangeType</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the currently configured sensor range for the specified sensor (accelerometer, gyroscope, etc.).</div></div>",2776:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2776\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">SensorRange&nbsp;</td><td class=\"PName last\">range</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the specified sensor range. This will only work with a SensorRange object from the device features SupportedSensorRanges object or read from the device with getSensorRange.</div></div>",2777:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2777\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">SensorRange::</td><td class=\"PType\">Type&nbsp;</td><td class=\"PName last\">type,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">rangeId</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2778:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2778\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">GpioConfiguration getGpioConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">pin</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the currently configured GPIO settings.</div></div>",2779:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2779\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGpioConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">GpioConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GPIO configuration.</div></div>",2780:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2780\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> getGpioState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">pin</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sends the GPIO State command (0x0C, 0x42) to get the current state of the specified pin.</div></div>",2781:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2781\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGpioState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">pin,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">state</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends the GPIO State command (0x0C, 0x42) to temporarily set the state of the specified pin.</div></div>",2782:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2782\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">EventControlMode getEventTriggerMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">instance</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sends the Event Control command (0x0C, 0x2B) to get the current mode of the specified trigger.</div></div>",2783:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2783\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEventTriggerMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">instance,</td></tr><tr><td class=\"PType first\">EventControlMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sends the Event Control command (0x0C, 0x2B) to set the mode of the specified trigger.</div></div>",2784:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2784\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">EventTriggerConfiguration getEventTriggerConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">instance</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the currently configured event trigger settings for the specified trigger ID.</div></div>",2785:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2785\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEventTriggerConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">EventTriggerConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Set the event trigger configuration.</div></div>",2786:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2786\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">EventActionConfiguration getEventActionConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">instance</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets an event action configuration.</div></div>",2787:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2787\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEventActionConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">EventActionConfiguration&nbsp;</td><td class=\"PName\">config,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">validateSupported&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Set the event action configuration.</div></div>",2788:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2788\" class=\"NDPrototype NoParameterForm\">AntennaLeverArmCalConfiguration getAntennaLeverArmCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured GNSS antenna lever arm calibration configuration.</div></div>",2789:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2789\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAntennaLeverArmCal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AntennaLeverArmCalConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GNSS antenna lever arm calibration configuration.</div></div>",2790:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2790\" class=\"NDPrototype NoParameterForm\">PositionReferenceConfiguration getRelativePositionReference() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured reference for relative position values.</div></div>",2791:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2791\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setRelativePositionReference(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">PositionReferenceConfiguration&nbsp;</td><td class=\"PName last\">ref</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the reference for relative position values.</div></div>",2792:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2792\" class=\"NDPrototype NoParameterForm\">PositionOffset getLeverArmReferenceOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured lever arm reference point offset.</div></div>",2793:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2793\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setLeverArmReferenceOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">PositionOffset&nbsp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Set the lever arm offset for the reference point.</div></div>",2794:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2794\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalSpeedMeasurementUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">tow,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">unc</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends an external speed measurement update to be used as a filter input.</div></div>",2795:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2795\" class=\"NDPrototype NoParameterForm\">PositionOffset getSpeedMeasurementOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured lever arm offset for the speed measurement.</div></div>",2796:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2796\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSpeedMeasurementOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">PositionOffset&nbsp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the lever arm offset for the speed measurement.</div></div>",2797:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2797\" class=\"NDPrototype NoParameterForm\">GnssSignalConfiguration getGnssSignalConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the device\'s current GNSS signal configuration.</div></div>",2798:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2798\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGnssSignalConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">GnssSignalConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GNSS signal configuration.</div></div>",2799:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2799\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> rtkEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads whether RTK input is currently enabled on the device.</div></div>",2800:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2800\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableRtk(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables RTK input into the device.</div></div>",2801:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2801\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">EventTriggerStatus getEventTriggerStatus(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">std::</td><td class=\"PType\">vector&lt;<span class=\"SHKeyword\">uint8</span>&gt;&nbsp;</td><td class=\"PName\">instances&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">std::vector&lt;<span class=\"SHKeyword\">uint8</span>&gt;()</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sends the Event Trigger Status command (0x0C, 0x2C) to get the current status of the specified triggers.</div></div>",2802:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2802\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">EventActionStatus getEventActionStatus(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">std::</td><td class=\"PType\">vector&lt;<span class=\"SHKeyword\">uint8</span>&gt;&nbsp;</td><td class=\"PName\">instances&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">std::vector&lt;<span class=\"SHKeyword\">uint8</span>&gt;()</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sends the Event Action Status command (0x0C, 0x2D) to get the current status of the specified actions.</div></div>",2803:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2803\" class=\"NDPrototype NoParameterForm\">NmeaMessageFormats getNmeaMessageFormat() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the NMEA message formats currently configured to output on the device.</div></div>",2804:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2804\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setNmeaMessageFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">NmeaMessageFormats&nbsp;</td><td class=\"PName last\">nmeaFormats</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Sets the NMEA message formats to output on the device.</div></div>",2805:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2805\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MeasurementReferenceFrames getAidingMeasurementReferenceFrames(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Rotation::</td><td class=\"PType\">Format&nbsp;</td><td class=\"PName\">rotationFormat&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">Rotation::Format::EULER_ANGLES</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Get all aiding measurement reference frames configured on the device.</div></div>",2806:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2806\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAidingMeasurementReferenceFrames(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MeasurementReferenceFrames&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName\">frames,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td></td><td class=\"PName\">clearExcludedIds&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Set the aiding measurement reference frames on the device.</div></div>",2807:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2807\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MeasurementReferenceFrame getAidingMeasurementReferenceFrame(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName\">id,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Rotation::</td><td class=\"PType\">Format&nbsp;</td><td class=\"PName\">rotationFormat&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">Rotation::Format::EULER_ANGLES</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Get the aiding measurement reference frame for the specified frame ID configured on the device.</div></div>",2808:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2808\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAidingMeasurementReferenceFrame(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td></td><td class=\"PName last\">id,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MeasurementReferenceFrame&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">frame</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Set the aiding measurement reference frame for the specified frame ID on the device.</div></div>",2809:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2809\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAidingMeasurementResponseMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">AidingMeasurementInput::</td><td class=\"PType\">ResponseMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Set the response mode for commanded aiding measurement inputs on the device (command set 0x13, sendAidingMeasurement function).</div></div>",2810:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2810\" class=\"NDPrototype NoParameterForm\">AidingMeasurementInput::ResponseMode getAidingMeasurementResponseMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Get the response mode for commanded aiding measurement inputs configured on the device (command set 0x13, sendAidingMeasurements function).</div></div>",2811:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2811\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendAidingMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AidingMeasurementPosition&nbsp;</td><td class=\"PName last\">measurement</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Send a commanded aiding measurement to the device (command set 0x13).</div></div>",2812:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype2812\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">AidingMeasurementPosition sendAidingMeasurement_readEcho(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AidingMeasurementPosition&nbsp;</td><td class=\"PName last\">measurement</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Send a commanded aiding measurement to the device (command set 0x13) and read out the echoed measurement.&nbsp; Important: only use this function if the Aiding Measurement Response Mode is set to &lt;AidingMeasurementInput::ResponseMode::ECHO_INPUT&gt; - otherwise use sendAidingMeasurement().</div></div>"});